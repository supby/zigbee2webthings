// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ActionObject action object
//
// swagger:model ActionObject
type ActionObject map[string]ActionObjectAnon

// Validate validates this action object
func (m ActionObject) Validate(formats strfmt.Registry) error {
	var res []error

	for k := range m {

		if swag.IsZero(m[k]) { // not required
			continue
		}
		if val, ok := m[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName(k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName(k)
				}
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this action object based on the context it is used
func (m ActionObject) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	for k := range m {

		if val, ok := m[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ActionObjectAnon action object anon
//
// swagger:model ActionObjectAnon
type ActionObjectAnon struct {

	// href
	Href string `json:"href,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// input
	Input map[string]string `json:"input,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// time requested
	TimeRequested string `json:"timeRequested,omitempty"`
}

// Validate validates this action object anon
func (m *ActionObjectAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this action object anon based on context it is used
func (m *ActionObjectAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ActionObjectAnon) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActionObjectAnon) UnmarshalBinary(b []byte) error {
	var res ActionObjectAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
